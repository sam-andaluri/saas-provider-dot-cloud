version: 0.2

env:
  secrets-manager:
    REACT_APP_AUTH0_DOMAIN: "react-auth0-provider-prod:REACT_APP_AUTH0_DOMAIN"
    REACT_APP_AUTH0_CLIENT_ID: "react-auth0-provider-prod:REACT_APP_AUTH0_CLIENT_ID"
    REACT_APP_TENANT_API_CLIENT_ID: "react-auth0-provider-prod:REACT_APP_TENANT_API_CLIENT_ID"
    REACT_APP_TENANT_API_CLIENT_SECRET: "react-auth0-provider-prod:REACT_APP_TENANT_API_CLIENT_SECRET"
    REACT_APP_TENANT_API_AUDIENCE: "react-auth0-provider-prod:REACT_APP_TENANT_API_AUDIENCE"
phases:
  install:
    commands:
      - echo Install kubectl
      - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.18.9/2020-11-02/bin/linux/amd64/kubectl   
      - chmod +x ./kubectl
      - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
      - echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
      - source ~/.bashrc
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - echo Logging in to Docker Hub
      - docker login -u $docker_user -p $docker_password
      - export TAG=latest
      - echo Git commit hash $TAG will be used as image tag
      - echo Logging in to Amazon EKS...
      - aws eks --region $AWS_REGION update-kubeconfig --name $EKS_CLUSTER_NAME
  build:
    commands:
      - echo Export REACT APP vars
      - echo $REACT_APP_AUTH0_DOMAIN > .env
      - echo $REACT_APP_AUTH0_CLIENT_ID >> .env
      - echo $REACT_APP_TENANT_API_CLIENT_ID >> .env
      - echo $REACT_APP_TENANT_API_CLIENT_SECRET >> .env
      - echo $REACT_APP_TENANT_API_AUDIENCE >> .env
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $IMAGE_REPO_NAME:$TAG .
      - docker tag $IMAGE_REPO_NAME:$TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$TAG
      - echo Setting deployment image to new image
      - kubectl -n saas-provider-frontend rollout restart deployment/saas-provider-frontend-deployment
       